# OSV Scraper Configuration
#
# WARNING: This is a PILOT VERSION that has not been reviewed by experts.
# Use with caution in production environments.

# OSV API base URL
# This is the endpoint for fetching vulnerability data
# Default: https://api.osv.dev
OSV_API_BASE_URL=https://api.osv.dev

# Target ecosystems to fetch (comma-separated)
# REQUIRED for the fetch command to work
# Available ecosystems: npm, PyPI, Go, GitHub Actions, RubyGems, Maven,
# NuGet, Packagist, Pub, crates.io, Hex, and many more
# Example: OSV_ECOSYSTEMS=npm,PyPI,Go,GitHub Actions,RubyGems
OSV_ECOSYSTEMS=npm,PyPI,Go,GitHub Actions,RubyGems

# SQLite database path
# Location where vulnerability data is stored locally
# Default: ./osv.db
OSV_DB_PATH=./osv.db

# Data retention period in days
# Vulnerabilities older than this will be automatically deleted
# This helps manage database size and focus on recent vulnerabilities
# Default: 7
OSV_DATA_RETENTION_DAYS=3

# ===== Performance Settings =====
# These settings control the performance and behavior of data fetching

# API rate limit (requests per second)
# Controls how many requests per second are sent to the OSV API
# Lower values are more conservative and prevent hitting API limits
# Higher values increase throughput but may cause rate limit errors (429)
# Default: 10.0
# Recommended: 5.0-10.0 for production, 3.0 for resource-constrained environments
OSV_RATE_LIMIT=10.0

# Maximum concurrent API requests
# Number of parallel requests to process simultaneously
# Higher values increase speed but use more memory and network bandwidth
# Default: 5
# Recommended: 3-5 for daily updates, 10-20 for initial large fetches
OSV_MAX_CONCURRENCY=5

# Batch size for processing entries
# Number of vulnerability entries to process in each batch
# Larger batches improve throughput but increase memory usage
# Default: 100
# Recommended: 50-100 for standard environments, 200-500 for high-memory systems
OSV_BATCH_SIZE=100

# HTTP client timeout (seconds)
# Maximum time to wait for API responses
# Shorter timeouts fail faster but may not work on slow networks
# Longer timeouts are more tolerant but may hang longer
# Default: 30
# Recommended: 15-30 for fast networks, 60-120 for slow/unreliable connections
OSV_HTTP_TIMEOUT=30
